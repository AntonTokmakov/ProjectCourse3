<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="GroupStudIdShortName" targetNamespace="http://tempuri.org/GroupStudIdShortName.xsd" xmlns:mstns="http://tempuri.org/GroupStudIdShortName.xsd" xmlns="http://tempuri.org/GroupStudIdShortName.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="timeTableConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="timeTableConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.DataLessonsCours3.Properties.Settings.GlobalReference.Default.timeTableConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="GroupStudentTableAdapter" GeneratorDataComponentClassName="GroupStudentTableAdapter" Name="GroupStudent" UserDataComponentName="GroupStudentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="timeTableConnectionString (Settings)" DbObjectName="timeTable.dbo.GroupStudent" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[GroupStudent] WHERE (([idGroup] = @Original_idGroup) AND ([shortNameGroup] = @Original_shortNameGroup))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_shortNameGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="shortNameGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT idGroup, shortNameGroup FROM dbo.GroupStudent</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[GroupStudent] SET [idGroup] = @idGroup, [shortNameGroup] = @shortNameGroup WHERE (([idGroup] = @Original_idGroup) AND ([shortNameGroup] = @Original_shortNameGroup));
SELECT idGroup, shortNameGroup FROM GroupStudent WHERE (idGroup = @idGroup)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@idGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@shortNameGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="shortNameGroup" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_idGroup" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="idGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="AnsiString" Direction="Input" ParameterName="@Original_shortNameGroup" Precision="0" ProviderType="VarChar" Scale="0" Size="0" SourceColumn="shortNameGroup" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="idGroup" DataSetColumn="idGroup" />
              <Mapping SourceColumn="shortNameGroup" DataSetColumn="shortNameGroup" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="GroupStudIdShortName" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_UserDSName="GroupStudIdShortName" msprop:Generator_DataSetName="GroupStudIdShortName">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="GroupStudent" msprop:Generator_RowEvHandlerName="GroupStudentRowChangeEventHandler" msprop:Generator_RowDeletedName="GroupStudentRowDeleted" msprop:Generator_RowDeletingName="GroupStudentRowDeleting" msprop:Generator_RowEvArgName="GroupStudentRowChangeEvent" msprop:Generator_TablePropName="GroupStudent" msprop:Generator_RowChangedName="GroupStudentRowChanged" msprop:Generator_RowChangingName="GroupStudentRowChanging" msprop:Generator_TableClassName="GroupStudentDataTable" msprop:Generator_RowClassName="GroupStudentRow" msprop:Generator_TableVarName="tableGroupStudent" msprop:Generator_UserTableName="GroupStudent">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="idGroup" msprop:Generator_ColumnPropNameInRow="idGroup" msprop:Generator_ColumnPropNameInTable="idGroupColumn" msprop:Generator_ColumnVarNameInTable="columnidGroup" msprop:Generator_UserColumnName="idGroup" type="xs:int" />
              <xs:element name="shortNameGroup" msprop:Generator_ColumnPropNameInRow="shortNameGroup" msprop:Generator_ColumnPropNameInTable="shortNameGroupColumn" msprop:Generator_ColumnVarNameInTable="columnshortNameGroup" msprop:Generator_UserColumnName="shortNameGroup">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:GroupStudent" />
      <xs:field xpath="mstns:idGroup" />
    </xs:unique>
  </xs:element>
</xs:schema>